apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "dotnetgigs.fullname" . }}-web
  labels:
    {{- include "dotnetgigs.labels" . | nindent 4 }}
    app: web
spec:
  replicas: {{ .Values.replicaCount.web }}
  selector:
    matchLabels:
      {{- include "dotnetgigs.selectorLabels" . | nindent 6 }}
      app: web
  template:
    metadata:
      labels:
        {{- include "dotnetgigs.selectorLabels" . | nindent 8 }}
        app: web
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
    spec:
      {{- if .Values.affinity.enabled }}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - jobs-api
                  - applicants-api
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
      containers:
      - name: web
        image: "{{ .Values.global.registry }}{{ .Values.images.web.repository }}:{{ .Values.images.web.tag }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - containerPort: 80
        resources:
          {{- toYaml .Values.resources.web | nindent 10 }}
        {{- if .Values.probes.enabled }}
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
        {{- end }}
